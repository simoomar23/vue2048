name: lab9

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose environment (QA or PROD)'
        required: true
        type: choice
        options:
          - QA
          - PROD
jobs:    
  build:
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v4
      - run: pnpm install
      - run: pnpm build
      - uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/

  lint:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v4
      - run: pnpm install
      - run: pnpm lint --fix
  test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v4
      - run: pnpm install
      - run: pnpm tests
  static-typing:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v4
      - run: pnpm install
      - run: pnpm type-check
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v4
      - run: pnpm install
      - run: pnpm build

      - name: Deploy to QA
        if: ${{ github.event.inputs.environment == 'QA' }}
        run: |
          pnpm add -g @azure/static-web-apps-cli
          swa deploy ./dist --env=production --deployment-token ${{ secrets.QA_DEPLOYMENT_TOKEN }}

      - name: Deploy to Production
        if: ${{ github.event.inputs.environment == 'PROD' }}
        run: |
          pnpm add -g @azure/static-web-apps-cli
          swa deploy ./dist --env=production --deployment-token ${{ secrets.PROD_DEPLOYMENT_TOKEN }}


